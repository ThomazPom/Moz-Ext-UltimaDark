name: Release

on:
  push:
    tags:
      - 'v*'  # Triggers when a version tag is pushed
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  release:
    runs-on: ubuntu-latest

    env:
      FILES_TO_PACKAGE: |
        popup.js
        popup.html
        options_styles.css
        MurmurHash3.js
        manifest.json
        inject_css_*.css
        imageWorker.js
        content_script.js
        bg.jpg
        background.js
        icons/*

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the latest Node.js version
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'  # Automatically fetches the latest LTS version

      # Read the version from manifest.json
      - name: Read version from manifest.json
        id: read_version
        run: |
          VERSION=$(jq -r '.version' < manifest.json)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      # Create a zip of selected files (from the FILES_TO_PACKAGE environment variable)
      - name: Create zip of selected files
        run: |
          mkdir -p release
          FILES=$(echo "${{ env.FILES_TO_PACKAGE }}" | tr '\n' ' ')
          zip -r "release/project-v${{ env.VERSION }}.zip" $FILES

      # Create an xpi file (using the same list of files)
      - name: Create xpi file
        run: |
          mkdir -p release
          cd release
          FILES=$(echo "${{ env.FILES_TO_PACKAGE }}" | tr '\n' ' ')
          zip -r "project-v${{ env.VERSION }}.xpi" ../$FILES

      # Create a release on GitHub
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "v${{ env.VERSION }}"
          release_name: "Release v${{ env.VERSION }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload zip file to the release
      - name: Upload zip asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/project-v${{ env.VERSION }}.zip
          asset_name: project-v${{ env.VERSION }}.zip
          asset_content_type: application/zip

      # Upload xpi file to the release
      - name: Upload xpi asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/project-v${{ env.VERSION }}.xpi
          asset_name: project-v${{ env.VERSION }}.xpi
          asset_content_type: application/x-xpinstall
